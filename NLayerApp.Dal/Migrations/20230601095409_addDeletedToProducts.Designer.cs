// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NLayerApp.Dal;

#nullable disable

namespace NLayerApp.Dal.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230601095409_addDeletedToProducts")]
    partial class addDeletedToProducts
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("NLayerApp.Core.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Categories", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreateDate = new DateTime(2023, 6, 1, 12, 54, 9, 675, DateTimeKind.Local).AddTicks(262),
                            Description = "Elektornik Eşyalar",
                            IsDeleted = false,
                            Name = "Elektronik Eşyalar"
                        },
                        new
                        {
                            Id = 2,
                            CreateDate = new DateTime(2023, 6, 1, 12, 54, 9, 675, DateTimeKind.Local).AddTicks(271),
                            Description = "Çantalar",
                            IsDeleted = false,
                            Name = "Çantalar"
                        },
                        new
                        {
                            Id = 3,
                            CreateDate = new DateTime(2023, 6, 1, 12, 54, 9, 675, DateTimeKind.Local).AddTicks(272),
                            Description = "Telefonlar",
                            IsDeleted = false,
                            Name = "Telefonlar"
                        });
                });

            modelBuilder.Entity("NLayerApp.Core.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            Code = "0001",
                            CreateDate = new DateTime(2023, 6, 1, 12, 54, 9, 675, DateTimeKind.Local).AddTicks(402),
                            IsDeleted = false,
                            Name = "Tost Makinası",
                            Price = 1500m,
                            Stock = 15
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 2,
                            Code = "00002",
                            CreateDate = new DateTime(2023, 6, 1, 12, 54, 9, 675, DateTimeKind.Local).AddTicks(405),
                            IsDeleted = false,
                            Name = "Leptop Çantası",
                            Price = 750m,
                            Stock = 20
                        });
                });

            modelBuilder.Entity("NLayerApp.Core.Models.Product", b =>
                {
                    b.HasOne("NLayerApp.Core.Models.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("NLayerApp.Core.Models.Category", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
